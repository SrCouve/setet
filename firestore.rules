rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Função para verificar se o usuário está autenticado
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Função para verificar se o usuário está acessando seus próprios dados
    function isOwner(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }
    
    // Regras para a coleção de usuários
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow write: if isOwner(userId);
    }
    
    // Regras para a coleção de matches
    match /matches/{matchId} {
      allow read: if isAuthenticated() && (
        matchId.matches(request.auth.uid + '_*') || 
        matchId.matches('*_' + request.auth.uid)
      );
      allow write: if isAuthenticated() && (
        matchId.matches(request.auth.uid + '_*') || 
        matchId.matches('*_' + request.auth.uid)
      );
    }
    
    // Regras para a coleção de cartas
    match /cards/{cardId} {
      allow read: if isAuthenticated();
      allow write: if false; // Apenas administradores podem modificar cartas
    }
    
    // Regras para a coleção de solicitações
    match /requests/{requestId} {
      allow read: if isAuthenticated() && (
        resource.data.fromUserId == request.auth.uid || 
        resource.data.toUserId == request.auth.uid
      );
      allow create: if isAuthenticated() && request.resource.data.fromUserId == request.auth.uid;
      allow update: if isAuthenticated() && (
        resource.data.fromUserId == request.auth.uid || 
        resource.data.toUserId == request.auth.uid
      );
    }
  }
} 